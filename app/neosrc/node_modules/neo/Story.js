const path = require('path');

const log = require('log');

const Author = require('./Author.js');
const JSONPackageFile = require('./JSONPackageFile.js')

module.exports = class Story {
  /** Check if given path is a neo story or template. */
  static isStory(filePath) {
    return ['.nsf', '.ntf'].indexOf(path.extname(filePath).toLowerCase()) > -1;
  }

  /** Construct a new Story from a file path, Author, or a JSON object. The JSON object
  constructor is intended for deserialization. */
  constructor(o) {
    if (typeof o == 'string') {
      this.jpf = new JSONPackageFile(o);
      log.debug('Story JPF type', this.jpf.typeURL);
    }

    if (o instanceof Author) {
      this.Author = o;
    } else {
      Object.assign(this, o);
    }
  }

  get Author() {
    return this._Author;
  }

  set Author(newAuthor) {
    this._Author = newAuthor;
  }

  get storyType() {
    return this.jpf.typeURL.split('#')[1];
  }
}
