const lineByLine = require('n-readlines');
const log = require('log');

/** Acts as a wrapper around a JSON package file. See the FILEFORMAT.md document
for details about JSON package files. */
self = module.exports = class JSONPackageFile {
  /** Construct a new JSONPackageFile object given a path to the physical file. */
  constructor(filePath) {
    this._filePath = filePath;
  }

  /** Returns the type URL for this JPF, reading the header (URL and metadata)
  if necessary. */
  get typeURL() {
    if (!this._typeURL) {
      this.readHeader();
    }

    return this._typeURL;
  }

  get metadata() {
    if (!this._metadata) {
      this.readHeader();
    }

    return this._metadata;
  }

  readHeader() {
    // !!!LATER!!! need to add some validation/enforcement code to simplify troubleshooting
    var lineReader = new lineByLine(this._filePath);
    var line = lineReader.next().toString();
    if (line.trim() != '[') {
      log.error('JSONPackageFile expected [, received ', line);
      return false;
    }
    line = lineReader.next();

    this._typeURL = JSON.parse('[' + line + ' null]')[0];

    var lines = '';

    line = lineReader.next();
    while (!/^\s*},$/.test(line)) {
      lines += line;
      line = lineReader.next();
    }

    lines += line;
    log.debug('lines', lines);

    this._metadata = JSON.parse('[' + lines + ' null]')[0];
  }
}
